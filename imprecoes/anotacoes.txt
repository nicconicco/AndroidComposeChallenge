1 - Criei um modulo para o tema basico

2 - toda vez que mudo o layout tenho que dar um re build ( o que pode demorar seculos dependendo a maquina do caboclo)

3 - chega nas imagens e ja da problema.

tem que atualizar o compose.. pq no site ja nao ta assim?


tive que atualizar o kotlin do meu AS tambem 

*

    Tools -> Kotlin -> Configure Kotlin Plugin Updates -> Check for updates now


no gradle maior:

classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"

*

Dependencias do modulo basico:


plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion "1.4.30"
        kotlinCompilerExtensionVersion "1.0.0-beta01"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha06'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.compose.ui:ui:1.0.0-beta01'
    implementation 'androidx.compose.ui:ui-tooling:1.0.0-beta01'
    implementation 'androidx.compose.foundation:foundation:1.0.0-beta01'
    implementation 'androidx.compose.material:material:1.0.0-beta01'
    implementation 'androidx.compose.material:material-icons-core:1.0.0-beta01'
    implementation 'androidx.compose.material:material-icons-extended:1.0.0-beta01'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha02'
    implementation 'androidx.compose.runtime:runtime-livedata:1.0.0-beta01'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.0.0-beta01'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.0-beta01'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

-

So nestes passos ja da vontade de desistir, parece que to jogando street fighter (que no caso to ouvindo agora pra me dar insentivo a lutar contra
essas configuracoes basicas que eles ja poderiam ter atualizado)

-

na doc ta prefHei..

Quando na verdade eh

Spacer(Modifier.height(16.dp))


-

uma simples mudanca de shape pra deixar redondo ta demorando alguns bons minutos aqui no meu i7 9 gen 16gb..


nao consegui ver o preview ai joguei no emulador msm, la foi..


-


vendo o segundo video

parece facil a acessibilidade, o que hoje eh meio problematico.

-

legal a comunicacao com o viewmodel com um for.. mas nao sei se isso deveria ser responsabilidade da view.

-

muitos exemplos legais o que antes era so os hello world da vida

https://github.com/android/compose-samples

-

https://developer.android.com/jetpack/compose/mental-model?continue=https%3A%2F%2Fdeveloper.android.com%2Fcourses%2Fpathways%2Fcompose%23article-https%3A%2F%2Fdeveloper.android.com%2Fjetpack%2Fcompose%2Fmental-model

Eh bom ver como faz umas listas meio bobinhas

Com listas comecou a dar uns bug na IDE.. 

LazyColumn eh o recyclerview dos cara.. agora me pergunto pq diabos mudou de nome

ja to sofrendo com o lazy q nao ta atualizado na doc...

/**

/**
 * Display a list of names the user can click with a header
 */
@Composable
fun NamePicker(
    header: String,
    names: List<String>,
    onNameClicked: (String) -> Unit
) {
    Column {
        // this will recompose when [header] changes, but not when [names] changes
        Text(header, style = MaterialTheme.typography.h5)
        Divider()

        // LazyColumnFor is the Compose version of a RecyclerView.
        // The lambda paLazyColumnForssed is similar to a RecyclerView.ViewHolder.


        LazyColumn {
            items(names) {names ->
                Messages

            }
            for (name in names) {
                CuritibaItens(name, onNameClicked)
            }
        }
    }
}

**/

nao funfa de jeito algum, ate vi de novo o video anterior mas nao foi.

Espero que nos proximos consiga.
-


Na questao dos modifiers so ficou confuso isso:

//.padding(8.dp)
        .clip(RoundedCornerShape(4.dp))
        .background(MaterialTheme.colors.surface)
        .clickable(onClick = { /* Ignoring onClick */ })
        //.padding(16.dp)

no caso o primeiro diz padding pra view..

o segundo padding do click

-

Sobre botoes

ja nao ta atualizado na doc

https://developer.android.com/codelabs/jetpack-compose-layouts?continue=https%3A%2F%2Fdeveloper.android.com%2Fcourses%2Fpathways%2Fcompose%23codelab-https%3A%2F%2Fdeveloper.android.com%2Fcodelabs%2Fjetpack-compose-layouts#3

de codelab

-

doeu um pouco pra aprende o tabbar mas ate que rolou

-
com download de imagens..

Failed to resolve: dev.chrisbanes.accompanist:accompanist-coil:0.5.2

pra variar ta desatualizado

        implementation "dev.chrisbanes.accompanist:accompanist-coil:0.6.1"


e tem que add o     mavenCentral()

-

A forma de construir elementos propios eh um pouco mais complexo

https://developer.android.com/codelabs/jetpack-compose-layouts?continue=https%3A%2F%2Fdeveloper.android.com%2Fcourses%2Fpathways%2Fcompose%23codelab-https%3A%2F%2Fdeveloper.android.com%2Fcodelabs%2Fjetpack-compose-layouts#6

deu certo os exemplos so tinha um ajuste de children pra content.

-

Eh importante pensar em usar o Box

o surface eh so uma view com o q tem de maximo dentro..

-

final do codelab parece bem fraco, nada muito interessante. O exemplo que passaram nao eh a mesma coisa que mostraram.
